  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateAuthors (20180226110732)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "authors" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "first_name" varchar, "last_name" varchar, "birth_year" integer, "is_alive" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180226110732"]]
  [1m[35m (2.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-02-26 11:07:48.754582"], ["updated_at", "2018-02-26 11:07:48.754582"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "Malki"], ["last_name", "Davis"], ["birth_year", 1985], ["is_alive", "t"], ["created_at", "2018-02-26 11:07:54.877095"], ["updated_at", "2018-02-26 11:07:54.877095"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "Sam"], ["last_name", "Brown"], ["birth_year", 1895], ["is_alive", "f"], ["created_at", "2018-02-26 11:13:03.686269"], ["updated_at", "2018-02-26 11:13:03.686269"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Started GET "/gi" for 127.0.0.1 at 2018-02-27 09:24:22 +0200
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (193.6ms)
Completed 200 OK in 209ms (Views: 205.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:24:24 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 58ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for 127.0.0.1 at 2018-02-27 09:24:24 +0200
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.1.4) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.4) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.4) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.4) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.4) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.4) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.4) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.4) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.3) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.4) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.4) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.4) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.3) lib/rack/sendfile.rb:111:in `call'
railties (5.1.4) lib/rails/engine.rb:522:in `call'
puma (3.10.0) lib/puma/configuration.rb:225:in `call'
puma (3.10.0) lib/puma/server.rb:605:in `handle_request'
puma (3.10.0) lib/puma/server.rb:437:in `process_client'
puma (3.10.0) lib/puma/server.rb:301:in `block in run'
puma (3.10.0) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:24:26 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.4ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 33ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:24:32 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.3ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started GET "/gi" for 127.0.0.1 at 2018-02-27 09:26:18 +0200
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (3.2ms)
Completed 200 OK in 16ms (Views: 12.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:26:18 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 35ms (Views: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:34:08 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms


  
NameError (uninitialized constant PairType):
  
app/graphql/types/author_type.rb:17:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:34:29 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NoMethodError (undefined method `float' for #<GraphQL::Define::TypeDefiner:0x007fe749a7ab38>
Did you mean?  Float):
  
app/graphql/types/pair_type.rb:5:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/gi" for 127.0.0.1 at 2018-02-27 09:34:41 +0200
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 18ms (Views: 13.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:34:41 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `float' for #<GraphQL::Define::TypeDefiner:0x007fe749a7ab38>
Did you mean?  Float):
  
app/graphql/types/pair_type.rb:5:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:34:41 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `float' for #<GraphQL::Define::TypeDefiner:0x007fe749a7ab38>
Did you mean?  Float):
  
app/graphql/types/pair_type.rb:5:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:34:43 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `float' for #<GraphQL::Define::TypeDefiner:0x007fe749a7ab38>
Did you mean?  Float):
  
app/graphql/types/pair_type.rb:5:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:35:53 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:39:52 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 29ms (ActiveRecord: 0.9ms)


  
NoMethodError (undefined method `to_a' for 1:Fixnum
Did you mean?  to_yaml
               to_s
               to_param
               to_c
               to_d
               to_r
               to_i
               to_f):
  
app/models/author.rb:7:in `publication_years'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:40:10 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 24ms (ActiveRecord: 0.9ms)


  
NoMethodError (undefined method `mao' for [1, 2, 3, 4, 5, 6, 7, 8, 9]:Array
Did you mean?  max
               map):
  
app/models/author.rb:7:in `publication_years'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:40:30 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.7ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/models/author.rb:7:in `map'
app/models/author.rb:7:in `publication_years'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/gi" for 127.0.0.1 at 2018-02-27 09:41:01 +0200
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (3.1ms)
Completed 200 OK in 16ms (Views: 12.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:41:02 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 29ms (Views: 5.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:41:05 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:44:18 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n    all_authors\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n    all_authors\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 12ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:45:07 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n    all_authors {\n      full_name\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n    all_authors {\n      full_name\n    }\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:45:32 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n    }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n    }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT "authors".* FROM "authors"[0m
Completed 200 OK in 14ms (Views: 0.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:47:18 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n    }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n    }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT "authors".* FROM "authors"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:47:28 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n      publication_years\n    }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n      publication_years\n    }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT "authors".* FROM "authors"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 09:49:48 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n      publication_years\n    }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  author(id:1){\n    first_name\n    full_name\n    coordinates {\n      latitude\n      longitude\n    }\n    publication_years\n  }\n  all_authors {\n      full_name\n      last_name\n      publication_years\n    }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? ORDER BY "authors"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT "authors".* FROM "authors"[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 21:59:14 +0200
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Type):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:05:57 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 10ms


  
NameError (uninitialized constant Type):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:06:43 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'relative'):
  
app/graphql/types/mutation_type.rb:10:in `block (2 levels) in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/gi" for 127.0.0.1 at 2018-02-27 22:06:47 +0200
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (153.1ms)
Completed 200 OK in 175ms (Views: 169.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:06:48 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 0ms


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'relative'):
  
app/graphql/types/mutation_type.rb:10:in `block (2 levels) in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:06:48 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 0ms


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'relative'):
  
app/graphql/types/mutation_type.rb:10:in `block (2 levels) in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:06:49 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false)\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 0ms


  
GraphQL::Define::NoDefinitionError (GraphQL::Field can't define 'relative'):
  
app/graphql/types/mutation_type.rb:10:in `block (2 levels) in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/gi" for 127.0.0.1 at 2018-02-27 22:09:33 +0200
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (4.5ms)
Completed 200 OK in 18ms (Views: 13.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:09:34 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 48ms (Views: 6.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:09:35 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n  }\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n  }\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:09:57 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n  }\n  id\n  full_name\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n  }\n  id\n  full_name\n}\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:10:32 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Jim\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "Jim"], ["last_name", "Smith"], ["birth_year", 1900], ["is_alive", "f"], ["created_at", "2018-02-27 20:10:32.911100"], ["updated_at", "2018-02-27 20:10:32.911100"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:19:54 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"John\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"John\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms


  
NameError (uninitialized constant Mutation):
  
app/graphql/types/mutation_type.rb:13:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:20:48 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"John\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"John\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "John"], ["last_name", "Smith"], ["birth_year", 1900], ["is_alive", "f"], ["created_at", "2018-02-27 20:20:48.693393"], ["updated_at", "2018-02-27 20:20:48.693393"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 42ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:20:56 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createAuthor(first_name:\"Josh\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createAuthor(first_name:\"Josh\", last_name: \"Smith\", birth_year: 1900, is_alive: false) {\n    id\n    full_name\n  }\n}\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "Josh"], ["last_name", "Smith"], ["birth_year", 1900], ["is_alive", "f"], ["created_at", "2018-02-27 20:20:56.138747"], ["updated_at", "2018-02-27 20:20:56.138747"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-27 22:26:26 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateAuthor(id:3, first_name:\"Jack\") {\n    id\n    full_name\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateAuthor(id:3, first_name:\"Jack\") {\n    id\n    full_name\n  }\n}\n", "variables"=>nil}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "authors" SET "first_name" = ?, "updated_at" = ? WHERE "authors"."id" = ?[0m  [["first_name", "Jack"], ["updated_at", "2018-02-27 20:26:26.358295"], ["id", 3]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 50ms (Views: 0.3ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:46:00 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation createAuthor($author: AuthorInputType) {\n  createAuthor(author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Mike", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"createAuthor", "graphql"=>{"query"=>"mutation createAuthor($author: AuthorInputType) {\n  createAuthor(author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Mike", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"createAuthor"}}
Completed 500 Internal Server Error in 12ms


  
NameError (uninitialized constant Type):
  
app/graphql/types/author_type.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:14:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:47:17 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation createAuthor($author:AuthorInputType) {\n  createAuthor(author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Mike", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"createAuthor", "graphql"=>{"query"=>"mutation createAuthor($author:AuthorInputType) {\n  createAuthor(author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Mike", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"createAuthor"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "authors" ("first_name", "last_name", "birth_year", "is_alive", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["first_name", "Mike"], ["last_name", "Smith"], ["birth_year", 1954], ["is_alive", "t"], ["created_at", "2018-02-28 09:47:17.132610"], ["updated_at", "2018-02-28 09:47:17.132610"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 77ms (Views: 0.5ms | ActiveRecord: 5.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:51:35 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation updateAuthor($author:AuthorInputType) {\n  updateAuthor(id: 6, author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Gary", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"updateAuthor", "graphql"=>{"query"=>"mutation updateAuthor($author:AuthorInputType) {\n  updateAuthor(id: 6, author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Gary", "last_name"=>"Smith", "birth_year"=>1954, "is_alive"=>true}}, "operationName"=>"updateAuthor"}}
  [1m[36mAuthor Load (0.1ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "authors" SET "first_name" = ?, "updated_at" = ? WHERE "authors"."id" = ?[0m  [["first_name", "Gary"], ["updated_at", "2018-02-28 09:51:35.831417"], ["id", 6]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 53ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:52:40 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation updateAuthor($author:AuthorInputType) {\n  updateAuthor(id: 6, author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Jerry"}}, "operationName"=>"updateAuthor", "graphql"=>{"query"=>"mutation updateAuthor($author:AuthorInputType) {\n  updateAuthor(id: 6, author: $author) {\n    id\n    full_name\n  }\n}\n", "variables"=>{"author"=>{"first_name"=>"Jerry"}}, "operationName"=>"updateAuthor"}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "authors" SET "first_name" = ?, "updated_at" = ? WHERE "authors"."id" = ?[0m  [["first_name", "Jerry"], ["updated_at", "2018-02-28 09:52:40.979734"], ["id", 6]]
  [1m[35m (6.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:58:48 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>{"author"=>{"first_name"=>"Jerry"}}, "graphql"=>{"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>{"author"=>{"first_name"=>"Jerry"}}}}
Completed 500 Internal Server Error in 14ms


  
NameError (uninitialized constant Types::Boolean):
  
app/graphql/mutations/delete_author.rb:6:in `<class:DeleteAuthor>'
app/graphql/mutations/delete_author.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:15:in `block in <top (required)>'
app/graphql/bookshelf_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:59:38 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "authors" WHERE "authors"."id" = ?[0m  [["id", 6]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 34ms (Views: 0.2ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-02-28 11:59:40 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  deleteAuthor(id: 6) {}\n}\n", "variables"=>nil}}
  [1m[36mAuthor Load (0.2ms)[0m  [1m[34mSELECT  "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?[0m  [["id", 6], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordNotFound (Couldn't find Author with 'id'=6):
  
app/graphql/mutations/delete_author.rb:23:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-03-04 01:15:28 +0200
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation createAuthor($author:AuthorInputType) {\n  createAuthor(author: $author) {\n    errors\n  }\n}\n", "variables"=>{"author"=>{"birth_year"=>1800}}, "operationName"=>"createAuthor", "graphql"=>{"query"=>"mutation createAuthor($author:AuthorInputType) {\n  createAuthor(author: $author) {\n    errors\n  }\n}\n", "variables"=>{"author"=>{"birth_year"=>1800}}, "operationName"=>"createAuthor"}}
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 200 OK in 48ms (Views: 0.4ms | ActiveRecord: 0.7ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180305193820)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "password_digest" varchar, "is_superadmin" boolean, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180305193820"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateSessions (20180305194157)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "sessions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "key" varchar, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, CONSTRAINT "fk_rails_758836b4f0"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
)[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_sessions_on_user_id" ON "sessions" ("user_id")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180305194157"]]
  [1m[35m (6.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_sessions_on_user_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_sessions_on_user_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "users" ("email", "password_digest", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "john@example.com"], ["password_digest", "$2a$10$R4b0PYhBYYh/7.DLpNZ6seVXFVKEu8ip5H.b1PBeopUH0YCr2ncGy"], ["created_at", "2018-03-05 19:54:20.645952"], ["updated_at", "2018-03-05 19:54:20.645952"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "users" SET "is_superadmin" = ?, "updated_at" = ? WHERE "users"."id" = ?[0m  [["is_superadmin", "t"], ["updated_at", "2018-03-05 19:55:13.168121"], ["id", 1]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Started GET "/gi" for 127.0.0.1 at 2018-03-05 21:55:30 +0200
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/malkadavis/.rvm/gems/ruby-2.3.1/gems/graphiql-rails-1.4.5/app/views/graphiql/rails/editors/show.html.erb (195.2ms)
Completed 200 OK in 210ms (Views: 206.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-03-05 21:55:31 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 51ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-03-05 21:56:07 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  login(email: \"john@example.com\", password:\"1234\")\n}\n", "variables"=>{"comment"=>{"body"=>"Doing well"}}, "operationName"=>nil, "graphql"=>{"query"=>"{\n  login(email: \"john@example.com\", password:\"1234\")\n}\n", "variables"=>{"comment"=>{"body"=>"Doing well"}}, "operationName"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = ? ORDER BY "users"."id" ASC LIMIT ?[0m  [["email", "john@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "sessions" ("user_id", "key", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["key", "bd9f11c81cae7c19ce1d964c0cd64561de7fa4c206ce70c551b6522e9e93efa8664ac7cbcadc0fd0f006f79521510a0330cd"], ["created_at", "2018-03-05 19:56:07.654821"], ["updated_at", "2018-03-05 19:56:07.654821"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 106ms (Views: 0.2ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-03-05 21:56:15 +0200
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  login(email: \"john@example.com\", password:\"12\")\n}\n", "variables"=>{"comment"=>{"body"=>"Doing well"}}, "operationName"=>nil, "graphql"=>{"query"=>"{\n  login(email: \"john@example.com\", password:\"12\")\n}\n", "variables"=>{"comment"=>{"body"=>"Doing well"}}, "operationName"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = ? ORDER BY "users"."id" ASC LIMIT ?[0m  [["email", "john@example.com"], ["LIMIT", 1]]
Completed 200 OK in 58ms (Views: 0.1ms | ActiveRecord: 0.2ms)


